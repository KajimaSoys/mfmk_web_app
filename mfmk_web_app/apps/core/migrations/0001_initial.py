# Generated by Django 4.1.2 on 2022-10-18 18:15

from django.db import migrations, models
import json.decoder
import json.encoder


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('entity_name', models.CharField(max_length=200, verbose_name='Организация')),
                ('name', models.CharField(max_length=200, verbose_name='Фамилия, имя, отчество')),
                ('post', models.CharField(max_length=200, verbose_name='Должность')),
                ('email', models.CharField(max_length=200, verbose_name='Email')),
                ('number', models.CharField(max_length=200, verbose_name='Контактный телефон')),
                ('city', models.CharField(max_length=200, verbose_name='Город')),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор')),
                ('system', models.CharField(choices=[('heating', 'Отопление'), ('water_supply', 'Водоснабжение'), ('pumping_station', 'КНС'), ('firefighting', 'Пожаротушение')], max_length=30, verbose_name='Система')),
                ('manufacturer', models.CharField(blank=True, choices=[('dek', 'DEK'), ('iek', 'IEK'), ('ekf', 'EKF'), ('keaz', 'КЭАЗ')], max_length=10, verbose_name='Производитель')),
                ('sup_parameter', models.CharField(blank=True, choices=[('pressure', 'Давление'), ('temperature', 'Температура'), ('flow', 'Расход'), ('level', 'Уровень')], max_length=30, verbose_name='Поддерживаемый параметр')),
                ('volume_pump', models.BooleanField(default=False, verbose_name='Насос')),
                ('volume_pump_mark', models.CharField(blank=True, max_length=100, verbose_name='Маркировка')),
                ('volume_fan', models.BooleanField(default=False, verbose_name='Вентилятор')),
                ('volume_fan_mark', models.CharField(blank=True, max_length=100, verbose_name='Маркировка')),
                ('volume_smoke_exhauster', models.BooleanField(default=False, verbose_name='Дымосос')),
                ('volume_smoke_exhauster_mark', models.CharField(blank=True, max_length=100, verbose_name='Маркировка')),
                ('volume_gate_valves', models.BooleanField(default=False, verbose_name='Задвижки')),
                ('volume_gate_valves_mark', models.CharField(blank=True, max_length=100, verbose_name='Маркировка')),
                ('engine_data', models.JSONField(blank=True, decoder=json.decoder.JSONDecoder, encoder=json.encoder.JSONEncoder, verbose_name='Данные электродвигателей')),
                ('cabinet_parameters', models.CharField(blank=True, choices=[('uhl4', 'УХЛ4'), ('uhl2', 'УХЛ2'), ('uhl1', 'УХЛ1')], max_length=15, verbose_name='Параметры шкафа и окружающей среды')),
                ('cabinet_width', models.CharField(blank=True, max_length=10, verbose_name='Ширина шкафа, мм')),
                ('cabinet_height', models.CharField(blank=True, max_length=10, verbose_name='Высота шкафа, мм')),
                ('cabinet_depth', models.CharField(blank=True, max_length=10, verbose_name='Глубина шкафа, мм')),
                ('engine_control', models.CharField(blank=True, choices=[('direct', 'Прямой пуск'), ('smooth', 'Плавный пуск'), ('frequency', 'Частотное регулирование')], max_length=30, verbose_name='Управление двигателями')),
                ('one_freq', models.BooleanField(default=False, verbose_name='Один преобразователь частоты')),
                ('for_each', models.BooleanField(default=False, verbose_name='ПЧ на каждый электродвигатель')),
                ('power_inputs', models.CharField(blank=True, choices=[('two_power_ats', 'Два ввода питания (с АВР)'), ('two_power_noats', 'Два ввода питания (без АВР)'), ('one_power', 'Один ввод питания')], max_length=30, verbose_name='Количество вводов питания')),
                ('add_information', models.TextField(blank=True, verbose_name='Дополнительные сведения ')),
            ],
        ),
    ]
